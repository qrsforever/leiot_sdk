一. 目录结构描述

+-- sample                  : 例程目录, 演示通信模块和服务模块的使用
+-- src
    +-- sdk-impl            : SDK的接口层, 提供总体的头文件, 和一些API的接口封装
    +-- sdk-tests           : SDK的单元测试
    +-- mqtt-client         : 通信模块, 实现以MQTT协议接入[和云讨论]
    +-- udp-client          : 通信模块, 实现以udp局域网协议接入<制定标准后通知APP>
    +-- tcp-client          : 通信模块, 实现以tcp协议接入[备选，有限级低，可能代替MQTT]
    +-- ota                 : 服务模块, 实现固件下载通道[参考电视，找OO谈]
    +-- shadow              : 服务模块, 实现设备影子
    +-- platform            : 硬件平台抽象层, 存放不同嵌入式设备的抽象层接口实现, 支撑以上模块形成跨平台
    +-- import              : 外部输入目录, 存放芯片/模组厂商提供的头文件/二进制库
    +-- access              : 实现不同配网方式，包括：softAP, 一件配网， 批量配网等
    +-- security            : 实现设备安全认证
    +-- system              : 基础模块, 实现全局信息保存, 如预置的设备标识ID等
    +-- tls                 : 基础模块, 实现TLS/DTLS, 来自裁剪过的开源软件mbedtls


二. 维度需求
    1. 资源总成，生成最终的SDK（一个静态库）
    2. Debug版&release版
    3. 各自模块子makefile
    4. Linux编译环境
    5. SDK独立编译环境不和Android编译环境集成（只提交静态库）
    6. 代码不依赖Android资源
    7. 针对不同设备类型输出不同SDK（中控，standlone设备，网关等）
    8. 针对不同目标平台（Linux，Android，FreeRTOS，无操作系统）
