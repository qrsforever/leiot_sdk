# CMakeLists.txt

# Set sdk name
SET (LEIOT_SDK_NAME "leiot_sdk")

IF (NOT LEIOT_ENABLE_STATIC)
    ADD_COMPILE_OPTIONS ("-fPIC")
ENDIF ()

# TODO Only for local debug mqtt
SET (ENABLE_LOCAL_CLOUD $ENV{ENABLE_LOCAL_CLOUD})
IF (ENABLE_LOCAL_CLOUD STREQUAL "ON")
    ADD_DEFINITIONS (-DENABLE_LOCAL_CLOUD)
    ADD_DEFINITIONS (-DLOCAL_CLOUD_HOST=\"$ENV{LOCAL_CLOUD_HOST}\")
    ADD_DEFINITIONS (-DLOCAL_CLOUD_PORT=$ENV{LOCAL_CLOUD_PORT})
ENDIF ()

# Append global properties for sample
LEIOT_GLOBAL_GET (GLOBAL_INCLUDE_DIR)
LEIOT_GLOBAL_GET (GLOBAL_COMPILE_FLAGS)
LEIOT_GLOBAL_GET (GLOBAL_LINKS_DIR)
LEIOT_GLOBAL_GET (GLOBAL_DEFINITIONS)
LIST (APPEND LEIOT_INCLUDES ${GLOBAL_INCLUDE_DIR})
LIST (APPEND LEIOT_LINKS ${GLOBAL_LINKS_DIR})
LIST (APPEND LEIOT_CFLAGS ${GLOBAL_COMPILE_FLAGS} "-ansi")
LIST (APPEND LEIOT_DEFINITIONS ${GLOBAL_DEFINITIONS})

LEIOT_INCLUDE (tls/CMakeLists.txt)
LEIOT_INCLUDE (ota/CMakeLists.txt)
LEIOT_INCLUDE (guider/CMakeLists.txt)
LEIOT_INCLUDE (security/CMakeLists.txt)
LEIOT_INCLUDE (mqtt-client/CMakeLists.txt)
LEIOT_INCLUDE (shadow/CMakeLists.txt)
LEIOT_INCLUDE (sdk-impl/CMakeLists.txt)
LEIOT_INCLUDE (tcp-client/CMakeLists.txt)
LEIOT_INCLUDE (udp-client/CMakeLists.txt)
LEIOT_INCLUDE (access/CMakeLists.txt)
LEIOT_INCLUDE (import/CMakeLists.txt)
LEIOT_INCLUDE (platform/CMakeLists.txt)
LEIOT_INCLUDE (system/CMakeLists.txt)
LEIOT_INCLUDE (devices/CMakeLists.txt)
LEIOT_INCLUDE (subdev/CMakeLists.txt)
LEIOT_INCLUDE (utils/CMakeLists.txt)

LIST (REMOVE_DUPLICATES LEIOT_C_SOURCES)
IF (NOT LEIOT_ENABLE_STATIC)
    ADD_LIBRARY (${LEIOT_SDK_NAME} SHARED ${LEIOT_C_SOURCES})
ELSE ()
    ADD_LIBRARY (${LEIOT_SDK_NAME} STATIC ${LEIOT_C_SOURCES})
ENDIF ()

# Add the include directories to the current
IF (LEIOT_INCLUDES)
    LIST (REMOVE_DUPLICATES LEIOT_INCLUDES)
    INCLUDE_DIRECTORIES (${LEIOT_INCLUDES})
ENDIF ()

# Add the link directories to the current
IF (LEIOT_LINKS)
    LINK_DIRECTORIES (${LEIOT_LINKS})
ENDIF ()

# Add the definitions to the target 
IF (LEIOT_DEFINITIONS)
    LIST (REMOVE_DUPLICATES LEIOT_DEFINITIONS)
    TARGET_COMPILE_DEFINITIONS (${LEIOT_SDK_NAME} PRIVATE ${LEIOT_DEFINITIONS})
ENDIF ()

# Add the cflags to the target
IF (LEIOT_CFLAGS)
    LIST (REMOVE_DUPLICATES LEIOT_CFLAGS)
    TARGET_COMPILE_OPTIONS (${LEIOT_SDK_NAME} PRIVATE ${LEIOT_CFLAGS})
ENDIF ()

# Add the static libraries to the target
IF (LEIOT_STATIC_LIBS)
    LIST (REMOVE_DUPLICATES LEIOT_STATIC_LIBS)
    LEIOT_GLOBAL_APPEND (GLOBAL_STATIC_LIBS ${LEIOT_STATIC_LIBS})
ENDIF ()

# Add the dynamic libraries to the target
IF (LEIOT_SHARED_LIBS)
    LIST (REMOVE_DUPLICATES LEIOT_SHARED_LIBS)
    LEIOT_GLOBAL_APPEND (GLOBAL_SHARED_LIBS ${LEIOT_SHARED_LIBS})
    TARGET_LINK_LIBRARIES(${LEIOT_SDK_NAME} ${LEIOT_SHARED_LIBS})
ENDIF ()

IF (NOT LEIOT_ENABLE_STATIC)
    LEIOT_GLOBAL_APPEND (GLOBAL_SHARED_LIBS ${LEIOT_SDK_NAME})
ELSE ()
    LEIOT_GLOBAL_APPEND (GLOBAL_STATIC_LIBS ${LEIOT_SDK_NAME})
ENDIF ()

# Package command
ADD_CUSTOM_TARGET (sdk_package
    COMMAND exec ${PROJECT_SCRIPT_DIR}/make_sdk_package.sh "${PROJECT_TOP_DIR}" "sdk_package" "${LEIOT_SDK_VERSION}"
    DEPENDS ${LEIOT_SDK_NAME}
    WORKING_DIRECTORY ${leiot_BINARY_DIR}
    VERBATIM
)

# Debug
LEIOT_TARGET_COMPILE_INFO (${LEIOT_SDK_NAME})
