# CMakeLists.txt

IF (NOT LEIOT_ENABLE_STATIC)
    ADD_COMPILE_OPTIONS ("-fPIC")
ENDIF ()

LEIOT_GLOBAL_GET (GLOBAL_INCLUDE_DIR)
LEIOT_GLOBAL_GET (GLOBAL_COMPILE_FLAGS)
LEIOT_GLOBAL_GET (GLOBAL_LINKS_DIR)
LEIOT_GLOBAL_GET (GLOBAL_DEFINITIONS)

LIST (APPEND LEIOT_INCLUDES ${PLATFORM_INCLUDES} ${GLOBAL_INCLUDE_DIR})
LIST (APPEND LEIOT_LINKS ${PLATFORM_LINKS})
LIST (APPEND LEIOT_CFLAGS ${PLATFORM_CFLAGS} ${GLOBAL_COMPILE_FLAGS})
LIST (APPEND LEIOT_STATIC_LIBS ${PLATFORM_STATIC_LIBS})
LIST (APPEND LEIOT_SHARED_LIBS ${PLATFORM_SHARED_LIBS})
LIST (APPEND LEIOT_DEFINITIONS ${PLATFORM_DEFINITIONS} ${GLOBAL_DEFINITIONS})

LEIOT_INCLUDE (tls/CMakeLists.txt)
LEIOT_INCLUDE (ota/CMakeLists.txt)
LEIOT_INCLUDE (guider/CMakeLists.txt)
LEIOT_INCLUDE (security/CMakeLists.txt)
LEIOT_INCLUDE (mqtt-client/CMakeLists.txt)
LEIOT_INCLUDE (shadow/CMakeLists.txt)
LEIOT_INCLUDE (sdk-impl/CMakeLists.txt)
LEIOT_INCLUDE (tcp-client/CMakeLists.txt)
LEIOT_INCLUDE (udp-client/CMakeLists.txt)
LEIOT_INCLUDE (access/CMakeLists.txt)
LEIOT_INCLUDE (import/CMakeLists.txt)
LEIOT_INCLUDE (platform/CMakeLists.txt)
LEIOT_INCLUDE (system/CMakeLists.txt)
LEIOT_INCLUDE (devices/CMakeLists.txt)
LEIOT_INCLUDE (utils/CMakeLists.txt)

LIST (REMOVE_DUPLICATES LEIOT_C_SOURCES)
IF (NOT LEIOT_ENABLE_STATIC)
    ADD_LIBRARY (${LEIOT_SDK_NAME} SHARED ${LEIOT_C_SOURCES})
ELSE ()
    ADD_LIBRARY (${LEIOT_SDK_NAME} STATIC ${LEIOT_C_SOURCES})
ENDIF ()

# Add the include directories to the INCLUDE_DIRECTORIES
IF (LEIOT_INCLUDES)
    LIST (REMOVE_DUPLICATES LEIOT_INCLUDES)
    INCLUDE_DIRECTORIES (${LEIOT_INCLUDES})
ENDIF ()

# Add the link directories  to the LINK_DIRECTORIES
IF (LEIOT_LINKS)
    LINK_DIRECTORIES (${LEIOT_LINKS})
ENDIF ()

# Add the definitions to the ADD_DEFINITIONS
IF (LEIOT_DEFINITIONS)
    LIST (REMOVE_DUPLICATES LEIOT_DEFINITIONS)
    ADD_DEFINITIONS (${LEIOT_DEFINITIONS})
ENDIF ()

# Add the cflags to the TARGET_COMPILE_OPTIONS
IF (LEIOT_CFLAGS)
    LIST (REMOVE_DUPLICATES LEIOT_CFLAGS)
    TARGET_COMPILE_OPTIONS (${LEIOT_SDK_NAME} PRIVATE ${LEIOT_CFLAGS})
ENDIF ()

# Add the static libraries to the GLOBAL_STATIC_LIBS
IF (LEIOT_STATIC_LIBS)
    LIST (REMOVE_DUPLICATES LEIOT_STATIC_LIBS)
    LEIOT_GLOBAL_APPEND (GLOBAL_STATIC_LIBS ${LEIOT_STATIC_LIBS})
    TARGET_LINK_LIBRARIES(${LEIOT_SDK_NAME} -Wl,--start-group ${LEIOT_STATIC_LIBS} -Wl,--start-group)
ENDIF ()

# Add the dynamic libraries to the GLOBAL_SHARED_LIBS
IF (LEIOT_SHARED_LIBS)
    LIST (REMOVE_DUPLICATES LEIOT_SHARED_LIBS)
    LEIOT_GLOBAL_APPEND (GLOBAL_SHARED_LIBS ${LEIOT_SHARED_LIBS})
    TARGET_LINK_LIBRARIES(${LEIOT_SDK_NAME} ${LEIOT_SHARED_LIBS})
ENDIF ()

IF (NOT LEIOT_ENABLE_STATIC)
    LEIOT_GLOBAL_APPEND (GLOBAL_SHARED_LIBS ${LEIOT_SDK_NAME})
ELSE ()
    LEIOT_GLOBAL_APPEND (GLOBAL_STATIC_LIBS ${LEIOT_SDK_NAME})
ENDIF ()

# Debug
LEIOT_COMPILE_INFO (${LEIOT_SDK_NAME})
